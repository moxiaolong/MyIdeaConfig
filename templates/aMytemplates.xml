<templateSet group="aMytemplates">
  <template name="srr" value="(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&#10;    $END$&#10;}" description="HttpServletRequest request, HttpServletResponse response) throws ServletException, IOExceptio" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="try_controller" value="try {&#10;&#9;$END$&#10;&#9;printResult(response, new Result(true, &quot;成功!&quot;, null));&#10;} catch (RuntimeException e) {&#10;&#9;e.printStackTrace();&#10;&#9;printResult(response, new Result(false, &quot;失败!&quot; + e.getMessage()));&#10;}" description="controller的try代码块" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="try_service" value="SqlSession sqlSession = getSession();&#10;$END$&#10;try {&#10;&#10;    commitAndCloseSession(sqlSession);&#10;} catch (RuntimeException e) {&#10;    rollbackAndCloseSession(sqlSession);&#10;    e.printStackTrace();&#10;    throw new RuntimeException(e.getMessage());&#10;}" description="service层try代码块" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="ac" value="ApplicationContext ac = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#10;$END$" description="Spring Context" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="postfile" value="axios.defaults.headers.post['Content-Type'] = 'multipart/form-data;charse=UTF-8';" description="通过ajax文成文件上传" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="post" value="axios.post($var1$,$var2$)&#10;    .then(res =&gt; {&#10;        if (res.data.flag) {&#10;            this.$message.success(res.data.message)&#10;            $end$&#10;        } else {&#10;            this.$message.error(res.data.message)&#10;        }&#10;    }).finally(() =&gt; {&#10;        //finally &#10;})&#10;" description="axios.post" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="路径" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="参数" defaultValue="" alwaysStopAt="true" />
    <variable name="end" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ssm_maven_pom" value=" &lt;dependencies&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;      &lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;      &lt;version&gt;1.16.20&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--mybatis核心jar包--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.mybatis&lt;/groupId&gt;&#10;      &lt;artifactId&gt;mybatis&lt;/artifactId&gt;&#10;      &lt;version&gt;3.5.2&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--spring的核心容器jar包--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;&#10;      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;&#10;      &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--Druid数据源--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;com.alibaba&lt;/groupId&gt;&#10;      &lt;artifactId&gt;druid&lt;/artifactId&gt;&#10;      &lt;version&gt;1.1.20&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--mysql数据库驱动--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;mysql&lt;/groupId&gt;&#10;      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;&#10;      &lt;version&gt;5.1.47&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--spring的jdbc操作数据库的jar包，包含spring自带数据源，jdbcTemplate--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;&#10;      &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;&#10;      &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--spring整合junit的jar包--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;&#10;      &lt;artifactId&gt;spring-test&lt;/artifactId&gt;&#10;      &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--Junit测试--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;junit&lt;/groupId&gt;&#10;      &lt;artifactId&gt;junit&lt;/artifactId&gt;&#10;      &lt;version&gt;4.12&lt;/version&gt;&#10;      &lt;scope&gt;test&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--mybatis整合spring的jar包--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.mybatis&lt;/groupId&gt;&#10;      &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;&#10;      &lt;version&gt;2.0.1&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;&#10;    &lt;!--事务管理器jar包--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;&#10;      &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;&#10;      &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--aop切面--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.aspectj&lt;/groupId&gt;&#10;      &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;&#10;      &lt;version&gt;1.9.2&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;&#10;    &lt;!--日志开始--&gt;&#10;    &lt;!-- 日志工具包 --&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;log4j&lt;/groupId&gt;&#10;      &lt;artifactId&gt;log4j&lt;/artifactId&gt;&#10;      &lt;version&gt;1.2.17&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--引入日志的门脸--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;&#10;      &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;&#10;      &lt;version&gt;1.7.25&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--为java做简单的日志记录--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;&#10;      &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;&#10;      &lt;version&gt;1.7.25&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--日志结束--&gt;&#10;&#10;    &lt;!--springmvc的核心包--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;&#10;      &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;&#10;      &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;&#10;    &lt;!-- JSTL标签库 --&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;jstl&lt;/groupId&gt;&#10;      &lt;artifactId&gt;jstl&lt;/artifactId&gt;&#10;      &lt;version&gt;1.2&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;taglibs&lt;/groupId&gt;&#10;      &lt;artifactId&gt;standard&lt;/artifactId&gt;&#10;      &lt;version&gt;1.1.2&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--servlet-api ：引入servlet的功能--&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;&#10;      &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;&#10;      &lt;version&gt;2.5&lt;/version&gt;&#10;      &lt;scope&gt;provided&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!--jsp-api: jsp页面的功能包 --&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;&#10;      &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;&#10;      &lt;version&gt;2.2&lt;/version&gt;&#10;      &lt;scope&gt;provided&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;!-- 文件上传 --&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;&#10;      &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;&#10;      &lt;version&gt;1.3.1&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;&#10;      &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;&#10;      &lt;version&gt;2.9.0&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;&#10;      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;&#10;      &lt;version&gt;2.9.0&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;&#10;      &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;&#10;      &lt;version&gt;2.9.0&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;  &lt;/dependencies&gt;&#10;&#10;    &lt;build&gt;&#10;          &lt;plugins&gt;&#10;              &lt;plugin&gt;&#10;                  &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;&#10;                  &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;&#10;                  &lt;version&gt;2.2&lt;/version&gt;&#10;                  &lt;configuration&gt;&#10;                      &lt;port&gt;80&lt;/port&gt;&#10;                      &lt;path&gt;/&lt;/path&gt;&#10;                  &lt;/configuration&gt;&#10;              &lt;/plugin&gt;&#10;          &lt;/plugins&gt;&#10;      &lt;/build&gt;" description="ssm_maven_pom" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="MAVEN" value="true" />
    </context>
  </template>
  <template name="ssm_web_xml" value="     &lt;!--导入Spring的配置文件--&gt;&#10;       &lt;!--tomcat启动时, 会为每一个WEB项目创建ServletContext, 对象创建完毕后, 执行context-param标签--&gt;&#10;       &lt;context-param&gt;&#10;         &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;&#10;         &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;&#10;       &lt;/context-param&gt;&#10;     &#10;       &lt;!--配置post请求的字符编码过滤器--&gt;&#10;       &lt;filter&gt;&#10;         &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;&#10;         &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;&#10;         &lt;init-param&gt;&#10;           &lt;param-name&gt;encoding&lt;/param-name&gt;&#10;           &lt;param-value&gt;utf-8&lt;/param-value&gt;&#10;         &lt;/init-param&gt;&#10;       &lt;/filter&gt;&#10;       &lt;filter-mapping&gt;&#10;         &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;&#10;         &lt;url-pattern&gt;/*&lt;/url-pattern&gt;&#10;       &lt;/filter-mapping&gt;&#10;     &#10;       &lt;!--监听ServletContext对象的创建--&gt;&#10;       &lt;listener&gt;&#10;         &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;&#10;       &lt;/listener&gt;&#10;     &#10;       &lt;!--配置SpringMVC的前端控制器, 并导入SpringMVC的配置文件--&gt;&#10;       &lt;servlet&gt;&#10;         &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt;&#10;         &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;&#10;         &lt;!--加载SpringMVC配置文件--&gt;&#10;         &lt;init-param&gt;&#10;           &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;&#10;           &lt;param-value&gt;classpath:springMvc.xml&lt;/param-value&gt;&#10;         &lt;/init-param&gt;&#10;         &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;&#10;       &lt;/servlet&gt;&#10;       &lt;servlet-mapping&gt;&#10;         &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt;&#10;         &lt;url-pattern&gt;*.do&lt;/url-pattern&gt;&#10;       &lt;/servlet-mapping&gt;" description="ssm_web_xml" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="zookeeper_maven_pom" value="    &lt;dependencies&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;junit&lt;/groupId&gt;&#10;            &lt;artifactId&gt;junit&lt;/artifactId&gt;&#10;            &lt;version&gt;4.12&lt;/version&gt;&#10;            &lt;scope&gt;test&lt;/scope&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;!--zookeeper的依赖--&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;&#10;            &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;&#10;            &lt;version&gt;3.4.7&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;!--&#10;           zookeepr CuratorFramework 是NetFlix公司开发的一款连接zookeeper服务的框架,&#10;           通过封装的一套高级API简化了ZooKeeper的操作,提供了比较全面的功能,&#10;           除了基础的节点的操作,节点的监听,还有集群的连接以及重试.&#10;        --&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.apache.curator&lt;/groupId&gt;&#10;            &lt;artifactId&gt;curator-framework&lt;/artifactId&gt;&#10;            &lt;version&gt;4.0.1&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.apache.curator&lt;/groupId&gt;&#10;            &lt;artifactId&gt;curator-recipes&lt;/artifactId&gt;&#10;            &lt;version&gt;4.0.1&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;    &lt;/dependencies&gt;" description="zookeeper_maven_pom" toReformat="false" toShortenFQNames="true" />
</templateSet>